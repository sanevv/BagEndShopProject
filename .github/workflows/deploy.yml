name: Deploy with DockerHub to Ubuntu Server

on:
  push:
    branches:
      - main

env:
  # Jasypt 키 환경 변수 (운영 빌드에만 사용)
  JASYPT_ENCRYPTOR_PASSWORD: ${{ secrets.JASYPT_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set gradlew permissions
        run: chmod +x ./gradlew
       
      # 1️⃣ 테스트 단계: 테스트 전용 profile 사용, Jasypt 없이 실행
      - name: Run Tests
        run: ./gradlew clean test -Dspring.profiles.active=test

      # 2️⃣ 빌드 단계: 실제 Jasypt 키 적용
      - name: Build with Gradle
        run: ./gradlew build -Djasypt.encryptor.password=$JASYPT_ENCRYPTOR_PASSWORD

      # 3️⃣ DockerHub 로그인
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # 4️⃣ Docker 이미지 빌드 & 푸시
      - name: Build and Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spring-app:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-app:latest

      # 5️⃣ SSH 키 등록
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      # 6️⃣ 서버 호스트 등록
      - name: Add known hosts
        run: ssh-keyscan -t ed25519 13.125.107.213 >> ~/.ssh/known_hosts

      # 7️⃣ 서버 배포
      - name: Deploy on server using DockerHub image
        run: |
          ssh ubuntu@13.125.107.213 << 'EOF'
            docker stop spring-app || true
            docker rm spring-app || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/spring-app:latest
            docker run -d --name spring-app -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/spring-app:latest
          EOF
